# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                                                      controllers.Application.index
GET         /me                                                                                    controllers.Application.me
GET         /disconnect                                                                            controllers.Application.logout

GET         /admin/metrics                                                                         com.kenshoo.play.metrics.MetricsController.metrics

GET         /webjars/*file                                                                         controllers.WebJarAssets.at(file)
GET         /fragments/*file                                                                       controllers.FragmentAssets.at(file)

# Javascript routing
GET         /assets/javascripts/routes                                                             controllers.Application.javascriptRoutes

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                                          controllers.Assets.at(path="/public", file)

# Clubs
GET         /clubs                                                                                 controllers.Clubs.list(p:Int ?= 0,s:Int ?= 2)
GET         /clubs/edit/$id<[0-9]+>                                                                controllers.Clubs.edit(id : Long)
POST         /clubs/$id<[0-9]+>                                                                     controllers.Clubs.update(id : Long)
GET         /clubs/new                                                                             controllers.Clubs.create
POST        /clubs                                                                                 controllers.Clubs.save
GET         /clubs/$id<[0-9]+>                                                                     controllers.Clubs.view(id : Long)
# Teams
GET         /teams                                                                                 controllers.Teams.list(p:Int ?= 0,s:Int ?= 2)
GET         /teams/edit/$id<[0-9]+>                                                                controllers.Teams.edit(id : Long)
POST         /teams/$id<[0-9]+>                                                                     controllers.Teams.update(id : Long)
GET         /teams/new                                                                             controllers.Teams.create
POST        /teams                                                                                 controllers.Teams.save
GET         /teams/$id<[0-9]+>                                                                     controllers.Teams.view(id : Long)
# Cities
GET         /cities                                                                                controllers.Cities.list(p:Int ?= 0,s:Int ?= 2)
GET         /cities/edit/$id<[0-9]+>                                                               controllers.Cities.edit(id : Long)
POST         /cities/$id<[0-9]+>                                                                    controllers.Cities.update(id : Long)
GET         /cities/new                                                                            controllers.Cities.create
POST        /cities                                                                                controllers.Cities.save
GET         /cities/$id<[0-9]+>                                                                    controllers.Cities.view(id : Long)
# Provinces
GET         /provinces                                                                             controllers.Provinces.list(p:Int ?= 0,s:Int ?= 2)
GET         /provinces/edit/$id<[0-9]+>                                                            controllers.Provinces.edit(id : Long)
POST         /provinces/$id<[0-9]+>                                                                 controllers.Provinces.update(id : Long)
GET         /provinces/new                                                                         controllers.Provinces.create
POST        /provinces                                                                             controllers.Provinces.save
GET         /provinces/$id<[0-9]+>                                                                 controllers.Provinces.view(id : Long)
# States
GET         /states                                                                                controllers.States.list(p:Int ?= 0,s:Int ?= 2)
GET         /states/edit/$id<[0-9]+>                                                               controllers.States.edit(id : Long)
POST         /states/$id<[0-9]+>                                                                    controllers.States.update(id : Long)
GET         /states/new                                                                            controllers.States.create
POST        /states                                                                                controllers.States.save
GET         /states/$id<[0-9]+>                                                                    controllers.States.view(id : Long)
# Countries
GET         /countries                                                                             controllers.Countries.list(p:Int ?= 0,s:Int ?= 2)
GET         /countries/edit/$id<[0-9]+>                                                            controllers.Countries.edit(id : Long)
POST         /countries/$id<[0-9]+>                                                                 controllers.Countries.update(id : Long)
GET         /countries/new                                                                         controllers.Countries.create
POST        /countries                                                                             controllers.Countries.save
GET         /countries/$id<[0-9]+>                                                                 controllers.Countries.view(id : Long)
# Players
GET         /players                                                                               controllers.Players.list(p:Int ?= 0,s:Int ?= 2)
GET         /players/edit/$id<[0-9]+>                                                              controllers.Players.edit(id : Long)
POST         /players/$id<[0-9]+>                                                                   controllers.Players.update(id : Long)
GET         /players/new                                                                           controllers.Players.create
POST        /players                                                                               controllers.Players.save
GET         /players/$id<[0-9]+>                                                                   controllers.Players.view(id : Long)

# Users
GET         /users                                                                                 controllers.Users.list(p:Int ?= 0,s:Int ?= 2)
GET         /users/$id<[0-9]+>                                                                     controllers.Users.view(id : Long)
# Seasons
GET         /seasons                                                                               controllers.Seasons.list(p:Int ?= 0,s:Int ?= 2)
GET         /seasons/edit/$id<[0-9]+>                                                              controllers.Seasons.edit(id : Long)
POST         /seasons/$id<[0-9]+>                                                                   controllers.Seasons.update(id : Long)
GET         /seasons/new                                                                           controllers.Seasons.create
POST        /seasons                                                                               controllers.Seasons.save
GET         /seasons/$id<[0-9]+>                                                                   controllers.Seasons.view(id : Long)
# Events
GET         /events                                                                                controllers.Events.list(p:Int ?= 0,s:Int ?= 2)
GET         /events/edit/$id<[0-9]+>                                                               controllers.Events.edit(id : Long)
POST         /events/$id<[0-9]+>                                                                    controllers.Events.update(id : Long)
GET         /events/new                                                                            controllers.Events.create
POST        /events                                                                                controllers.Events.save
POST        /events/newTeams                                                                       controllers.Events.saveTeams
GET         /events/$id<[0-9]+>                                                                    controllers.Events.view(id : Long)
GET         /events/json                                                                           controllers.Events.eventsData
GET         /api/v1/events/$id<[0-9]+>                                                             controllers.Events.jsonById(id: Long)
GET         /events/agenda                                                                         controllers.Events.agenda
# EventStatuses
GET         /eventStatuses                                                                         controllers.EventStatuses.list(p:Int ?= 0,s:Int ?= 2)
GET         /api/v1/eventStatuses                                                                  controllers.EventStatuses.jsonList
GET         /eventStatuses/edit/$id<[0-9]+>                                                        controllers.EventStatuses.edit(id : Long)
POST         /eventStatuses/$id<[0-9]+>                                                             controllers.EventStatuses.update(id : Long)
GET         /eventStatuses/new                                                                     controllers.EventStatuses.create
POST        /eventStatuses                                                                         controllers.EventStatuses.save
GET         /eventStatuses/$id<[0-9]+>                                                             controllers.EventStatuses.view(id : Long)

# Places
GET         /places                                                                                controllers.Places.list(p:Int ?= 0,s:Int ?= 2)
GET         /api/v1/places                                                                         controllers.Places.jsonList
GET         /places/edit/$id<[0-9]+>                                                               controllers.Places.edit(id : Long)
POST         /places/$id<[0-9]+>                                                                    controllers.Places.update(id : Long)
GET         /places/new                                                                            controllers.Places.create
POST        /places                                                                                controllers.Places.save
GET         /places/$id<[0-9]+>                                                                    controllers.Places.view(id : Long)
GET         /api/v1/places/$id<[0-9]+>                                                             controllers.Places.jsonById(id : Long)
GET         /places/map                                                                            controllers.Places.map
GET         /places/map/$zipcode<[0-9]+>                                                           controllers.Places.mapByZipcode(zipcode : String)
GET         /places/map/json                                                                       controllers.Places.gmapData
GET         /api/v1/places/zipcode/$code<[0-9]+>                                                   controllers.Places.jsonLikeZipcode(code : String)
GET         /api/v1/places/city/$city<[A-Za-z]+>                                                   controllers.Places.jsonLikeCity(city : String)
GET         /places/geo                                                                            controllers.Places.geoGM
GET         /places/geo/$code<[0-9]+>                                                              controllers.Places.geoGMByZipcode(code : String)
GET         /places/geoMQ                                                                          controllers.Places.geoMQ
GET         /places/geoMQ/$code<[0-9]+>                                                            controllers.Places.geoMQByZipcode(code : String)
GET         /places/geoOSM                                                                         controllers.Places.geoOSM
GET         /places/geoOSM/$code<[0-9]+>                                                           controllers.Places.geoOSMByZipcode(code : String)

# Categorys
GET         /categories                                                                            controllers.Categories.list(p:Int ?= 0,s:Int ?= 2)
GET         /categories/edit/$id<[0-9]+>                                                           controllers.Categories.edit(id : Long)
POST         /categories/$id<[0-9]+>                                                                controllers.Categories.update(id : Long)
GET         /categories/new                                                                        controllers.Categories.create
POST        /categories                                                                            controllers.Categories.save
GET         /categories/$id<[0-9]+>                                                                controllers.Categories.view(id : Long)
# Scales
GET         /scales                                                                                controllers.Scales.list(p:Int ?= 0,s:Int ?= 2)
GET         /scales/edit/$id<[0-9]+>                                                               controllers.Scales.edit(id : Long)
POST         /scales/$id<[0-9]+>                                                                    controllers.Scales.update(id : Long)
GET         /scales/new                                                                            controllers.Scales.create
POST        /scales                                                                                controllers.Scales.save
GET         /scales/$id<[0-9]+>                                                                    controllers.Scales.view(id : Long)
# TypMatches
GET         /typMatches                                                                            controllers.TypMatches.list(p:Int ?= 0,s:Int ?= 2)
GET         /typMatches/edit/$id<[0-9]+>                                                           controllers.TypMatches.edit(id : Long)
POST         /typMatches/$id<[0-9]+>                                                                controllers.TypMatches.update(id : Long)
GET         /typMatches/new                                                                        controllers.TypMatches.create
POST        /typMatches                                                                            controllers.TypMatches.save
GET         /typMatches/$id<[0-9]+>                                                                controllers.TypMatches.view(id : Long)
# TypCompetitions
GET         /typCompetitions                                                                       controllers.TypCompetitions.list(p:Int ?= 0,s:Int ?= 2)
GET         /typCompetitions/edit/$id<[0-9]+>                                                      controllers.TypCompetitions.edit(id : Long)
POST         /typCompetitions/$id<[0-9]+>                                                           controllers.TypCompetitions.update(id : Long)
GET         /typCompetitions/new                                                                   controllers.TypCompetitions.create
POST        /typCompetitions                                                                       controllers.TypCompetitions.save
GET         /typCompetitions/$id<[0-9]+>                                                           controllers.TypCompetitions.view(id : Long)
# SeasonCompetitions
GET         /seasonCompetitions                                                                    controllers.SeasonCompetitions.list(p:Int ?= 0,s:Int ?= 2)
GET         /seasonCompetitions/edit/$id<[0-9]+>                                                   controllers.SeasonCompetitions.edit(id : Long)
POST         /seasonCompetitions/$id<[0-9]+>                                                        controllers.SeasonCompetitions.update(id : Long)
GET         /seasonCompetitions/new                                                                controllers.SeasonCompetitions.create
POST        /seasonCompetitions                                                                    controllers.SeasonCompetitions.save
GET         /seasonCompetitions/$id<[0-9]+>                                                        controllers.SeasonCompetitions.view(id : Long)
# Fixtures
GET         /fixtures                                                                              controllers.Fixtures.list(p:Int ?= 0,s:Int ?= 2)
GET         /fixtures/edit/$id<[0-9]+>                                                             controllers.Fixtures.edit(id : Long)
POST         /fixtures/$id<[0-9]+>                                                                  controllers.Fixtures.update(id : Long)
GET         /fixtures/new                                                                          controllers.Fixtures.create
POST        /fixtures                                                                              controllers.Fixtures.save
GET         /fixtures/$id<[0-9]+>                                                                  controllers.Fixtures.view(id : Long)
# Matchs
GET         /matchs                                                                                controllers.Matchs.list(p:Int ?= 0,s:Int ?= 1)
GET         /matchs/$idMatch<[0-9]+>/debrief/$idTeam<[0-9]+>                                       controllers.Matchs.debrief(idMatch : Long, idTeam:Long)
GET         /matchs/$idMatch<[0-9]+>/prepare/$idTeam<[0-9]+>                                       controllers.Matchs.prepare(idMatch : Long, idTeam:Long)
GET         /matchs/$id<[0-9]+>.json                                                               controllers.Matchs.jsonById(id: Long)
# POST    /matchs/edit/$id<[0-9]+>            controllers.Matchs.update(id : Long)
# GET     /matchs/new                         controllers.Matchs.create
POST        /matchs                                                                                controllers.Matchs.save
GET         /matchs/$id<[0-9]+>                                                                    controllers.Matchs.view(id : Long)
GET         /matchs/event/$id<[0-9]+>                                                              controllers.Matchs.byEventId(id : Long)
# TypCards
GET         /typCards                                                                              controllers.TypCards.list(p:Int ?= 0,s:Int ?= 1)
GET         /typCards/edit/$id<[0-9]+>                                                             controllers.TypCards.edit(id : Long)
POST         /typCards/edit/$id<[0-9]+>                                                             controllers.TypCards.update(id : Long)
GET         /typCards/new                                                                          controllers.TypCards.create
POST        /typCards                                                                              controllers.TypCards.save
GET         /typCards/$id<[0-9]+>                                                                  controllers.TypCards.view(id : Long)
# Groups
GET         /groups                                                                              controllers.Groups.list(p:Int ?= 0,s:Int ?= 1)
GET         /groups/edit/$id<[0-9]+>                                                             controllers.Groups.edit(id : Long)
POST         /groups/edit/$id<[0-9]+>                                                             controllers.Groups.update(id : Long)
GET         /groups/new                                                                          controllers.Groups.create
POST        /groups                                                                              controllers.Groups.save
GET         /groups/$id<[0-9]+>                                                                  controllers.Groups.view(id : Long)
# TypEvents
GET         /typEvents                                                                             controllers.TypEvents.list(p:Int ?= 0,s:Int ?= 1)
GET         /api/v1/typEvents                                                                      controllers.TypEvents.jsonList
GET         /typEvents/edit/$id<[0-9]+>                                                            controllers.TypEvents.edit(id : Long)
POST         /typEvents/edit/$id<[0-9]+>                                                            controllers.TypEvents.update(id : Long)
GET         /typEvents/new                                                                         controllers.TypEvents.create
POST        /typEvents                                                                             controllers.TypEvents.save
GET         /typEvents/$id<[0-9]+>                                                                 controllers.TypEvents.view(id : Long)
# Positions
GET         /positions                                                                             controllers.Positions.list(p:Int ?= 0,s:Int ?= 1)
GET         /positions/edit/$id<[0-9]+>                                                            controllers.Positions.edit(id : Long)
POST         /positions/$id<[0-9]+>                                                                 controllers.Positions.update(id : Long)
GET         /positions/new                                                                         controllers.Positions.create
POST        /positions                                                                             controllers.Positions.save
GET         /positions/$id<[0-9]+>                                                                 controllers.Positions.view(id : Long)
# Formations
GET         /formations                                                                            controllers.Formations.list(p:Int ?= 0,s:Int ?= 1)
GET         /formations/edit/$id<[0-9]+>                                                           controllers.Formations.edit(id : Long)
POST         /formations/$id<[0-9]+>                                                                controllers.Formations.update(id : Long)
GET         /formations/new                                                                        controllers.Formations.create
POST        /formations                                                                            controllers.Formations.save
GET         /formations/$id<[0-9]+>                                                                controllers.Formations.view(id : Long)
POST        /formations/items                                                                      controllers.Formations.saveItems
# Answers
#GET     /answers                             controllers.Answers.list(p:Int ?= 0,s:Int ?= 1)
#GET     /answers/edit/$id<[0-9]+>            controllers.Answers.edit(id : Long)
#POST    /answers/edit/$id<[0-9]+>            controllers.Answers.update(id : Long)
#GET     /answers/new                         controllers.Answers.create
#POST    /answers/new                         controllers.Answers.save
#GET     /answers/$id<[0-9]+>                 controllers.Answers.view(id : Long)
GET         /events/$id<[0-9]+>/answers                                                            controllers.Answers.byEvent(id : Long)
GET         /events/$id<[0-9]+>/answers.json                                                       controllers.Answers.jsonByEvent(id : Long)
# Rankings
GET         /rankings                                                                              controllers.Rankings.index
GET         /rankings/$id<[0-9]+>                                                                  controllers.Rankings.list(id:Long, s:Int ?= 1)
# PlayerSeasons
GET         /playerseasons/season/$id<[0-9]+>                                                      controllers.PlayerSeasons.bySeason(id:Long)
GET         /playerseasons/season/$id<[0-9]+>/club/$idclub<[0-9]+>                                 controllers.PlayerSeasons.byClubAndSeason(idclub:Long, id:Long)
GET         /playerseasons/season/$id<[0-9]+>/club/$idclub<[0-9]+>/player/$idplayer<[0-9]+>        controllers.PlayerSeasons.playerByClubAndSeason(idplayer:Long, idclub:Long, id:Long)
# CompetitionTeam
GET         /competitionteams/competition/$id<[0-9]+>                                              controllers.CompetitionTeams.byCompetition(id:Long)
GET         /competitionteams/team/$id<[0-9]+>                                                     controllers.CompetitionTeams.byTeam(id:Long)
# Goals
GET         /goals/match/$idmatch<[0-9]+>/team/$idteam<[0-9]+>.json                                controllers.Goals.jsonByMatchAndTeam(idmatch:Long, idteam:Long)
# Substitutions
GET         /substitutions/match/$idmatch<[0-9]+>/team/$idteam<[0-9]+>.json                        controllers.Substitutions.jsonByMatchAndTeam(idmatch:Long, idteam:Long)
# Cards
GET         /cards/match/$idmatch<[0-9]+>/team/$idteam<[0-9]+>.json                                controllers.Cards.jsonByMatchAndTeam(idmatch:Long, idteam:Long)
# MatchPlayers
GET         /players/match/$idmatch<[0-9]+>/team/$idteam<[0-9]+>.json                              controllers.MatchPlayers.jsonByMatchAndTeam(idmatch:Long, idteam:Long)
# MatchTeam
GET         /match/$idmatch<[0-9]+>/home.json                                                      controllers.MatchTeams.jsonByMatchAndHome(idmatch:Long)
GET         /match/$idmatch<[0-9]+>/away.json                                                      controllers.MatchTeams.jsonByMatchAndAway(idmatch:Long)
GET         /match/$idmatch<[0-9]+>/team/$idTeam<[0-9]+>.json                                      controllers.MatchTeams.jsonByMatchAndTeam(idmatch:Long, idTeam:Long)

# SecureSocial
# Login page
GET         /login                                                                                 securesocial.controllers.LoginPage.login
GET         /logout                                                                                securesocial.controllers.LoginPage.logout

# User Registration and password handling (only needed if you are using UsernamePasswordProvider)
GET         /signup                                                                                securesocial.controllers.Registration.startSignUp
POST        /signup                                                                                securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                                                                         securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                                                                         securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                                                                                 securesocial.controllers.Registration.startResetPassword
POST        /reset                                                                                 securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                                                                          securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                                                                          securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                                                                              securesocial.controllers.PasswordChange.page
POST        /password                                                                              securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET         /authenticate/:provider                                                                securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider                                                                securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                                                                        securesocial.controllers.ProviderController.notAuthorized


